<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solsol.heycalendar.mapper.ScholarshipMapper">

    <!-- resultMap: scholarship (도메인: requiredDocuments=String) -->
    <resultMap id="ScholarshipMap" type="com.solsol.heycalendar.domain.Scholarship">
        <id     column="id"                         property="id"/>
        <result column="scholarship_name"          property="scholarshipName"/>
        <result column="description"               property="description"/>
        <result column="type"                      property="type"/>
        <result column="amount"                    property="amount"/>
        <result column="number_of_recipients"      property="numberOfRecipients"/>
        <result column="payment_method"            property="paymentMethod"/>
        <result column="recruitment_start_date"    property="recruitmentStartDate"/>
        <result column="recruitment_end_date"      property="recruitmentEndDate"/>
        <result column="evaluation_start_date"     property="evaluationStartDate"/>
        <result column="interview_date"            property="interviewDate"/>
        <result column="result_announcement_date"  property="resultAnnouncementDate"/>
        <result column="evaluation_method"         property="evaluationMethod"/>
        <result column="recruitment_status"        property="recruitmentStatus"/>
        <result column="eligibility_condition"     property="eligibilityCondition"/>
        <result column="grade_restriction"         property="gradeRestriction"/>
        <result column="major_restriction"         property="majorRestriction"/>
        <result column="duplicate_allowed"         property="duplicateAllowed"/>
        <result column="min_gpa"                   property="minGpa"/>
        <result column="category"                  property="category"/>
        <result column="contact_person_name"       property="contactPersonName"/>
        <result column="contact_phone"             property="contactPhone"/>
        <result column="contact_email"             property="contactEmail"/>
        <result column="office_location"           property="officeLocation"/>
        <result column="consultation_hours"        property="consultationHours"/>
        <result column="required_documents"        property="requiredDocuments"/>
        <result column="created_by"                property="createdBy"/>
        <result column="created_at"                property="createdAt"/>
        <result column="updated_at"                property="updatedAt"/>
    </resultMap>

    <!-- 장학금 + 신청상태 DTO (응답: requiredDocuments=List<RequiredDocumentDto>) -->
    <resultMap id="ScholarshipWithStateMap"
               type="com.solsol.heycalendar.dto.response.ScholarshipWithStateResponse">

        <!-- result* -->
        <result property="state"
                column="application_state"
                javaType="com.solsol.heycalendar.domain.ApplicationStatus"/>

        <!-- association* -->
        <association property="scholarship"
                     javaType="com.solsol.heycalendar.dto.response.ScholarshipResponse">
            <id     property="id"                   column="id"/>
            <result property="scholarshipName"      column="scholarship_name"/>
            <result property="description"          column="description"/>
            <result property="type"                 column="type"/>
            <result property="amount"               column="amount"/>
            <result property="numberOfRecipients"   column="number_of_recipients"/>
            <result property="paymentMethod"        column="payment_method"/>
            <result property="recruitmentStartDate" column="recruitment_start_date"/>
            <result property="recruitmentEndDate"   column="recruitment_end_date"/>
            <result property="evaluationStartDate"  column="evaluation_start_date"/>
            <result property="interviewDate"        column="interview_date"/>
            <result property="resultAnnouncementDate" column="result_announcement_date"/>
            <result property="evaluationMethod"     column="evaluation_method"/>
            <result property="recruitmentStatus"    column="recruitment_status"/>
            <result property="eligibilityCondition" column="eligibility_condition"/>
            <result property="gradeRestriction"     column="grade_restriction"/>
            <result property="majorRestriction"     column="major_restriction"/>
            <result property="duplicateAllowed"     column="duplicate_allowed"/>
            <result property="minGpa"               column="min_gpa"/>
            <result property="category"             column="category"/>
            <result property="contactPersonName"    column="contact_person_name"/>
            <result property="contactPhone"         column="contact_phone"/>
            <result property="contactEmail"         column="contact_email"/>
            <result property="officeLocation"       column="office_location"/>
            <result property="consultationHours"    column="consultation_hours"/>

            <!-- ✅ JSON -> List<RequiredDocumentDto> 로 변환 -->
            <result property="requiredDocuments"
                    column="required_documents"
                    typeHandler="com.solsol.heycalendar.config.RequiredDocumentsTypeHandler"/>

            <result property="createdBy"            column="created_by"/>
            <result property="createdAt"            column="created_at"/>
            <result property="updatedAt"            column="updated_at"/>
        </association>
    </resultMap>

    <!-- 동적 조건 (WHERE 없이 predicate만) -->
    <sql id="FilteredPredicates">
        <if test="status != null &amp;&amp; status != ''">
            <choose>
                <when test="status == 'OPEN'">
                    s.recruitment_end_date &gt;= CURDATE()
                </when>
                <when test="status == 'CLOSED'">
                    s.recruitment_end_date &lt; CURDATE()
                </when>
                <otherwise>
                    s.recruitment_status = #{status}
                </otherwise>
            </choose>
        </if>

        <if test="category != null &amp;&amp; category != ''">
            <if test="status != null &amp;&amp; status != ''">AND</if>
            (
            s.category = #{category}
            OR
            (CASE s.`type`
            WHEN 'ACADEMIC'      THEN '성적우수'
            WHEN 'FINANCIAL_AID' THEN '생활지원'
            WHEN 'ACTIVITY'      THEN '공로/활동'
            WHEN 'OTHER'         THEN '기타'
            ELSE '기타'
            END) = #{category}
            )
        </if>
    </sql>

    <!-- 총 개수 -->
    <select id="countFiltered" resultType="long">
        SELECT COUNT(*)
        FROM scholarship s
        LEFT JOIN application a
        ON a.scholarshipNm = s.id
        AND a.userNm        = #{userNm}
        <where>
            <include refid="FilteredPredicates"/>
            AND (a.state IS NULL OR UPPER(a.state) != 'APPROVED')
        </where>
    </select>

    <!-- 페이지 데이터 -->
    <select id="findFiltered" resultMap="ScholarshipWithStateMap">
        SELECT
        s.id, s.scholarship_name, s.description, s.`type`, s.amount, s.number_of_recipients, s.payment_method,
        s.recruitment_start_date, s.recruitment_end_date, s.evaluation_start_date, s.interview_date, s.result_announcement_date,
        s.evaluation_method, s.recruitment_status, s.eligibility_condition, s.grade_restriction, s.major_restriction,
        s.duplicate_allowed, s.min_gpa, s.category, s.contact_person_name, s.contact_phone, s.contact_email,
        s.office_location, s.consultation_hours, s.required_documents, s.created_by, s.created_at, s.updated_at,
        COALESCE(UPPER(a.state), 'NONE') AS application_state
        FROM scholarship s
        LEFT JOIN application a
        ON a.scholarshipNm = s.id
        AND a.userNm        = #{userNm}
        <where>
            <include refid="FilteredPredicates"/>
            AND (a.state IS NULL OR UPPER(a.state) != 'APPROVED')
        </where>
        ORDER BY s.recruitment_end_date ASC, s.id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- === Scholarship CRUD === -->
    <select id="findAll" resultMap="ScholarshipMap">
        SELECT * FROM scholarship ORDER BY created_at DESC
    </select>

    <select id="findById" parameterType="long" resultMap="ScholarshipMap">
        SELECT * FROM scholarship WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.solsol.heycalendar.domain.Scholarship"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO scholarship
        (scholarship_name, description, type, amount, number_of_recipients, payment_method,
         recruitment_start_date, recruitment_end_date, evaluation_start_date, interview_date, result_announcement_date,
         evaluation_method, recruitment_status, eligibility_condition, grade_restriction, major_restriction,
         duplicate_allowed, min_gpa, category, contact_person_name, contact_phone, contact_email,
         office_location, consultation_hours, required_documents, created_by)
        VALUES
            (#{scholarshipName}, #{description}, #{type}, #{amount}, #{numberOfRecipients}, #{paymentMethod},
             #{recruitmentStartDate}, #{recruitmentEndDate}, #{evaluationStartDate}, #{interviewDate}, #{resultAnnouncementDate},
             #{evaluationMethod}, #{recruitmentStatus}, #{eligibilityCondition}, #{gradeRestriction}, #{majorRestriction},
             #{duplicateAllowed}, #{minGpa}, #{category}, #{contactPersonName}, #{contactPhone}, #{contactEmail},
             #{officeLocation}, #{consultationHours}, #{requiredDocuments}, #{createdBy})
    </insert>

    <update id="update" parameterType="com.solsol.heycalendar.domain.Scholarship">
        UPDATE scholarship SET
                               scholarship_name = #{scholarshipName},
                               description = #{description},
                               type = #{type},
                               amount = #{amount},
                               number_of_recipients = #{numberOfRecipients},
                               payment_method = #{paymentMethod},
                               recruitment_start_date = #{recruitmentStartDate},
                               recruitment_end_date   = #{recruitmentEndDate},
                               evaluation_start_date  = #{evaluationStartDate},
                               interview_date         = #{interviewDate},
                               result_announcement_date = #{resultAnnouncementDate},
                               evaluation_method = #{evaluationMethod},
                               recruitment_status = #{recruitmentStatus},
                               eligibility_condition = #{eligibilityCondition},
                               grade_restriction = #{gradeRestriction},
                               major_restriction = #{majorRestriction},
                               duplicate_allowed = #{duplicateAllowed},
                               min_gpa = #{minGpa},
                               category = #{category},
                               contact_person_name = #{contactPersonName},
                               contact_phone = #{contactPhone},
                               contact_email = #{contactEmail},
                               office_location = #{officeLocation},
                               consultation_hours = #{consultationHours},
                               required_documents = #{requiredDocuments},
                               updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 상태/카테고리(라벨) 동적 필터 (기존) -->
    <select id="findByFilters" resultMap="ScholarshipMap">
        SELECT
        s.id,
        s.scholarship_name,
        s.description,
        s.`type`,
        s.amount,
        s.number_of_recipients,
        s.payment_method,
        s.recruitment_start_date,
        s.recruitment_end_date,
        s.recruitment_status,
        s.category,
        s.created_at,
        s.updated_at
        FROM `scholarship` s
        <where>
            <if test="status != null">
                <choose>
                    <when test="status == 'OPEN'">
                        s.recruitment_end_date &gt;= CURDATE()
                    </when>
                    <when test="status == 'CLOSED'">
                        s.recruitment_end_date &lt; CURDATE()
                    </when>
                    <otherwise>
                        s.recruitment_status = #{status}
                    </otherwise>
                </choose>
            </if>
            <if test="category != null">
                <if test="status != null">AND</if>
                (
                s.category = #{category}
                OR
                (CASE s.`type`
                WHEN 'ACADEMIC' THEN '성적우수'
                WHEN 'FINANCIAL_AID' THEN '생활지원'
                WHEN 'ACTIVITY' THEN '공로/활동'
                WHEN 'OTHER' THEN '기타'
                ELSE '기타'
                END) = #{category}
                )
            </if>
        </where>
        ORDER BY s.recruitment_end_date ASC, s.id DESC
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM scholarship WHERE id = #{id}
    </delete>

    <!-- === Criteria === -->
    <resultMap id="CriteriaMap" type="com.solsol.heycalendar.domain.ScholarshipCriteria">
        <id     column="id"               property="id"/>
        <result column="scholarship_id"   property="scholarshipId"/>
        <result column="name"             property="name"/>
        <result column="std_point"        property="stdPoint"/>
        <result column="weight_percent"   property="weightPercent"/>
        <result column="created_at"       property="createdAt"/>
    </resultMap>

    <select id="findCriteriaByScholarshipId" resultMap="CriteriaMap" parameterType="long">
        SELECT * FROM scholarship_criteria WHERE scholarship_id = #{scholarshipId} ORDER BY id
    </select>

    <select id="findCriteriaById" resultMap="CriteriaMap" parameterType="long">
        SELECT * FROM scholarship_criteria WHERE id = #{id}
    </select>

    <insert id="insertCriteria">
        INSERT INTO scholarship_criteria (scholarship_id, name, std_point, weight_percent)
        VALUES
        <foreach collection="list" item="c" separator=",">
            (#{c.scholarshipId}, #{c.name}, #{c.stdPoint}, #{c.weightPercent})
        </foreach>
    </insert>

    <insert id="insertSingleCriteria" parameterType="com.solsol.heycalendar.domain.ScholarshipCriteria"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO scholarship_criteria (scholarship_id, name, std_point, weight_percent)
        VALUES (#{scholarshipId}, #{name}, #{stdPoint}, #{WeightPercent})
    </insert>

    <update id="updateCriteria" parameterType="com.solsol.heycalendar.domain.ScholarshipCriteria">
        UPDATE scholarship_criteria
        SET name = #{name},
            std_point = #{stdPoint},
            weight_percent = #{weightPercent}
        WHERE id = #{id}
    </update>

    <delete id="deleteCriteria" parameterType="long">
        DELETE FROM scholarship_criteria WHERE id = #{id}
    </delete>

    <delete id="deleteCriteriaByScholarshipId" parameterType="long">
        DELETE FROM scholarship_criteria WHERE scholarship_id = #{scholarshipId}
    </delete>

    <!-- === Tags === -->
    <resultMap id="TagMap" type="com.solsol.heycalendar.domain.ScholarshipTag">
        <id     column="id"               property="id"/>
        <result column="scholarship_id"   property="scholarshipId"/>
        <result column="tag"              property="tag"/>
    </resultMap>

    <select id="findTagsByScholarshipId" parameterType="long" resultType="string">
        SELECT tag FROM scholarship_tag WHERE scholarship_id = #{scholarshipId} ORDER BY tag
    </select>

    <select id="findTagsByScholarshipIdFull" resultMap="TagMap" parameterType="long">
        SELECT * FROM scholarship_tag WHERE scholarship_id = #{scholarshipId} ORDER BY id
    </select>

    <insert id="insertTags">
        INSERT INTO scholarship_tag (scholarship_id, tag)
        VALUES
        <foreach collection="list" item="t" separator=",">
            (#{t.scholarshipId}, #{t.tag})
        </foreach>
    </insert>

    <insert id="insertTag" parameterType="com.solsol.heycalendar.domain.ScholarshipTag"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO scholarship_tag (scholarship_id, tag)
        VALUES (#{scholarshipId}, #{tag})
    </insert>

    <delete id="deleteTag" parameterType="long">
        DELETE FROM scholarship_tag WHERE id = #{id}
    </delete>

    <delete id="deleteTagsByScholarshipId" parameterType="long">
        DELETE FROM scholarship_tag WHERE scholarship_id = #{scholarshipId}
    </delete>

    <!-- === Notice === -->
    <resultMap id="NoticeMap" type="com.solsol.heycalendar.domain.ScholarshipNotice">
        <id     column="id"               property="id"/>
        <result column="scholarship_id"   property="scholarshipId"/>
        <result column="title"            property="title"/>
        <result column="content"          property="content"/>
        <result column="image_url"        property="imageUrl"/>
        <result column="created_at"       property="createdAt"/>
    </resultMap>

    <select id="findNoticeByScholarshipId" resultMap="NoticeMap" parameterType="long">
        SELECT * FROM scholarship_notice WHERE scholarship_id = #{scholarshipId} ORDER BY created_at DESC LIMIT 1
    </select>

    <select id="findNoticesByScholarshipId" resultMap="NoticeMap" parameterType="long">
        SELECT * FROM scholarship_notice WHERE scholarship_id = #{scholarshipId} ORDER BY created_at DESC
    </select>

    <select id="findNoticeById" resultMap="NoticeMap" parameterType="long">
        SELECT * FROM scholarship_notice WHERE id = #{id}
    </select>

    <select id="findAllNotices" resultMap="NoticeMap">
        SELECT * FROM scholarship_notice ORDER BY created_at DESC
    </select>

    <insert id="upsertNotice" parameterType="com.solsol.heycalendar.domain.ScholarshipNotice">
        INSERT INTO scholarship_notice (scholarship_id, title, content, image_url)
        VALUES (#{scholarshipId}, #{title}, #{content}, #{imageUrl})
            ON DUPLICATE KEY UPDATE
                                 title = VALUES(title),
                                 content = VALUES(content),
                                 image_url = VALUES(image_url)
    </insert>

    <insert id="insertNotice" parameterType="com.solsol.heycalendar.domain.ScholarshipNotice"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO scholarship_notice (scholarship_id, title, content, image_url)
        VALUES (#{scholarshipId}, #{title}, #{content}, #{imageUrl})
    </insert>

    <update id="updateNotice" parameterType="com.solsol.heycalendar.domain.ScholarshipNotice">
        UPDATE scholarship_notice
        SET title = #{title}, content = #{content}, image_url = #{imageUrl}
        WHERE id = #{id}
    </update>

    <delete id="deleteNotice" parameterType="long">
        DELETE FROM scholarship_notice WHERE id = #{id}
    </delete>

    <delete id="deleteNoticeByScholarshipId" parameterType="long">
        DELETE FROM scholarship_notice WHERE scholarship_id = #{scholarshipId}
    </delete>

    <!-- === Scheduler Queries === -->
    <select id="findScholarshipsEndingBetween" resultMap="ScholarshipMap">
        SELECT * FROM scholarship
        WHERE recruitment_status = 'OPEN'
          AND recruitment_end_date BETWEEN #{startDate} AND #{endDate}
        ORDER BY recruitment_end_date ASC
    </select>

    <select id="findScholarshipsCreatedBetween" resultMap="ScholarshipMap">
        SELECT * FROM scholarship
        WHERE DATE(created_at) BETWEEN #{startDate} AND #{endDate}
          AND recruitment_status = 'OPEN'
        ORDER BY created_at DESC
    </select>

    <select id="findScholarshipsEndingOn" resultMap="ScholarshipMap">
        SELECT * FROM scholarship
        WHERE recruitment_status = 'OPEN'
          AND recruitment_end_date = #{endDate}
        ORDER BY recruitment_end_date ASC
    </select>

    <!-- Distinct categories -->
    <select id="findDistinctCategories" resultType="string">
        SELECT DISTINCT category
        FROM scholarship
        WHERE category IS NOT NULL AND category != ''
        ORDER BY category ASC
    </select>

</mapper>
